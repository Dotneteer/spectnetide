//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\dotne\source\repos\spectnetide\Assembler\AntlrZ80EvalGenerator\AntlrZ80EvalGenerator\Z80Eval.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrZ80EvalGenerator {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="Z80EvalParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IZ80EvalListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] Z80EvalParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] Z80EvalParser.CompileUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.formatSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormatSpec([NotNull] Z80EvalParser.FormatSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.formatSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormatSpec([NotNull] Z80EvalParser.FormatSpecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] Z80EvalParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] Z80EvalParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpr([NotNull] Z80EvalParser.OrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpr([NotNull] Z80EvalParser.OrExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.xorExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXorExpr([NotNull] Z80EvalParser.XorExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.xorExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXorExpr([NotNull] Z80EvalParser.XorExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpr([NotNull] Z80EvalParser.AndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpr([NotNull] Z80EvalParser.AndExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.equExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquExpr([NotNull] Z80EvalParser.EquExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.equExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquExpr([NotNull] Z80EvalParser.EquExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.relExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelExpr([NotNull] Z80EvalParser.RelExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.relExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelExpr([NotNull] Z80EvalParser.RelExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.shiftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpr([NotNull] Z80EvalParser.ShiftExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.shiftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpr([NotNull] Z80EvalParser.ShiftExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.addExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpr([NotNull] Z80EvalParser.AddExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.addExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpr([NotNull] Z80EvalParser.AddExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.multExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultExpr([NotNull] Z80EvalParser.MultExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.multExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultExpr([NotNull] Z80EvalParser.MultExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] Z80EvalParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] Z80EvalParser.UnaryExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.literalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpr([NotNull] Z80EvalParser.LiteralExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.literalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpr([NotNull] Z80EvalParser.LiteralExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.symbolExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymbolExpr([NotNull] Z80EvalParser.SymbolExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.symbolExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymbolExpr([NotNull] Z80EvalParser.SymbolExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.z80Spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZ80Spec([NotNull] Z80EvalParser.Z80SpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.z80Spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZ80Spec([NotNull] Z80EvalParser.Z80SpecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.reg8"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReg8([NotNull] Z80EvalParser.Reg8Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.reg8"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReg8([NotNull] Z80EvalParser.Reg8Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.reg16"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReg16([NotNull] Z80EvalParser.Reg16Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.reg16"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReg16([NotNull] Z80EvalParser.Reg16Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.regIndirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRegIndirect([NotNull] Z80EvalParser.RegIndirectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.regIndirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRegIndirect([NotNull] Z80EvalParser.RegIndirectContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.memIndirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemIndirect([NotNull] Z80EvalParser.MemIndirectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.memIndirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemIndirect([NotNull] Z80EvalParser.MemIndirectContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.wordMemIndirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWordMemIndirect([NotNull] Z80EvalParser.WordMemIndirectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.wordMemIndirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWordMemIndirect([NotNull] Z80EvalParser.WordMemIndirectContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.flags"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlags([NotNull] Z80EvalParser.FlagsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.flags"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlags([NotNull] Z80EvalParser.FlagsContext context);
}
} // namespace AntlrZ80EvalGenerator
