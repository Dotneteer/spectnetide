//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\dotne\source\repos\spectnetide\Assembler\AntlrCommandParserGenerator\AntlrCommandParserGenerator\CommandTool.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Spect.Net.CommandParser.Generated {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class CommandToolLexer : Lexer {
	public const int
		WS=1, LESS=2, LESSEQ=3, GREAT=4, GREATEQ=5, EQ=6, MULT=7, HASH=8, ADD=9, 
		DASH=10, COLON=11, B=12, C=13, D=14, EB=15, EW=16, G=17, GS=18, H=19, 
		J=20, L=21, LW=22, M=23, P=24, R=25, RD=26, S=27, SB=28, T=29, TB=30, 
		RB=31, UB=32, XW=33, W=34, RETRIEVE=35, SECTION=36, LITERAL=37, LITCH=38, 
		OTHER=39;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "LESS", "LESSEQ", "GREAT", "GREATEQ", "EQ", "MULT", "HASH", "ADD", 
		"DASH", "COLON", "B", "C", "D", "EB", "EW", "G", "GS", "H", "J", "L", 
		"LW", "M", "P", "R", "RD", "S", "SB", "T", "TB", "RB", "UB", "XW", "W", 
		"RETRIEVE", "SECTION", "LITERAL", "LITCH", "OTHER"
	};


	public CommandToolLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'<'", "'<='", "'>'", "'>='", "'='", "'*'", "'#'", "'+'", 
		"'-'", "':'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "LESS", "LESSEQ", "GREAT", "GREATEQ", "EQ", "MULT", "HASH", 
		"ADD", "DASH", "COLON", "B", "C", "D", "EB", "EW", "G", "GS", "H", "J", 
		"L", "LW", "M", "P", "R", "RD", "S", "SB", "T", "TB", "RB", "UB", "XW", 
		"W", "RETRIEVE", "SECTION", "LITERAL", "LITCH", "OTHER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CommandTool.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x105\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x3\x2\x6\x2S"+
		"\n\x2\r\x2\xE\x2T\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6"+
		"\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3"+
		"\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3"+
		"\x10\x3\x10\x3\x10\x5\x10{\n\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3"+
		"\x11\x3\x11\x3\x11\x5\x11\x85\n\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13"+
		"\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x5\x13\x91\n\x13\x3\x14\x3\x14\x3"+
		"\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x17\x5\x17\xA1\n\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5\x1B\xB1\n"+
		"\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x5\x1D\xBD\n\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x3\x1F\x3\x1F\x5\x1F\xC9\n\x1F\x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3"+
		" \x5 \xD3\n \x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x5!\xDD\n!\x3\"\x3\"\x3\""+
		"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\xE7\n\"\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x5"+
		"$\xF0\n$\x3%\x3%\x3%\x3%\x3%\x3%\x5%\xF8\n%\x3&\x5&\xFB\n&\x3&\x6&\xFE"+
		"\n&\r&\xE&\xFF\x3\'\x3\'\x3(\x3(\x2\x2\x2)\x3\x2\x3\x5\x2\x4\a\x2\x5\t"+
		"\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2"+
		"\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)"+
		"\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2"+
		"\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K"+
		"\x2\'M\x2(O\x2)\x3\x2\x11\x4\x2\v\v\"\"\x4\x2\x44\x44\x64\x64\x4\x2\x45"+
		"\x45\x65\x65\x4\x2\x46\x46\x66\x66\x4\x2IIii\x4\x2JJjj\x4\x2LLll\x4\x2"+
		"NNnn\x4\x2OOoo\x4\x2RRrr\x4\x2TTtt\x4\x2UUuu\x4\x2VVvv\x4\x2YYyy\x6\x2"+
		"\x32;\x43\\\x61\x61\x63|\x12C\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a"+
		"\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x3R\x3\x2\x2\x2\x5V\x3\x2\x2\x2\aX\x3\x2\x2\x2\t[\x3\x2"+
		"\x2\x2\v]\x3\x2\x2\x2\r`\x3\x2\x2\x2\xF\x62\x3\x2\x2\x2\x11\x64\x3\x2"+
		"\x2\x2\x13\x66\x3\x2\x2\x2\x15h\x3\x2\x2\x2\x17j\x3\x2\x2\x2\x19l\x3\x2"+
		"\x2\x2\x1Bn\x3\x2\x2\x2\x1Dp\x3\x2\x2\x2\x1Fz\x3\x2\x2\x2!\x84\x3\x2\x2"+
		"\x2#\x86\x3\x2\x2\x2%\x90\x3\x2\x2\x2\'\x92\x3\x2\x2\x2)\x94\x3\x2\x2"+
		"\x2+\x96\x3\x2\x2\x2-\xA0\x3\x2\x2\x2/\xA2\x3\x2\x2\x2\x31\xA4\x3\x2\x2"+
		"\x2\x33\xA6\x3\x2\x2\x2\x35\xB0\x3\x2\x2\x2\x37\xB2\x3\x2\x2\x2\x39\xBC"+
		"\x3\x2\x2\x2;\xBE\x3\x2\x2\x2=\xC8\x3\x2\x2\x2?\xD2\x3\x2\x2\x2\x41\xDC"+
		"\x3\x2\x2\x2\x43\xE6\x3\x2\x2\x2\x45\xE8\x3\x2\x2\x2G\xEA\x3\x2\x2\x2"+
		"I\xF1\x3\x2\x2\x2K\xFA\x3\x2\x2\x2M\x101\x3\x2\x2\x2O\x103\x3\x2\x2\x2"+
		"QS\t\x2\x2\x2RQ\x3\x2\x2\x2ST\x3\x2\x2\x2TR\x3\x2\x2\x2TU\x3\x2\x2\x2"+
		"U\x4\x3\x2\x2\x2VW\a>\x2\x2W\x6\x3\x2\x2\x2XY\a>\x2\x2YZ\a?\x2\x2Z\b\x3"+
		"\x2\x2\x2[\\\a@\x2\x2\\\n\x3\x2\x2\x2]^\a@\x2\x2^_\a?\x2\x2_\f\x3\x2\x2"+
		"\x2`\x61\a?\x2\x2\x61\xE\x3\x2\x2\x2\x62\x63\a,\x2\x2\x63\x10\x3\x2\x2"+
		"\x2\x64\x65\a%\x2\x2\x65\x12\x3\x2\x2\x2\x66g\a-\x2\x2g\x14\x3\x2\x2\x2"+
		"hi\a/\x2\x2i\x16\x3\x2\x2\x2jk\a<\x2\x2k\x18\x3\x2\x2\x2lm\t\x3\x2\x2"+
		"m\x1A\x3\x2\x2\x2no\t\x4\x2\x2o\x1C\x3\x2\x2\x2pq\t\x5\x2\x2q\x1E\x3\x2"+
		"\x2\x2rs\ag\x2\x2s{\a\x64\x2\x2tu\ag\x2\x2u{\a\x44\x2\x2vw\aG\x2\x2w{"+
		"\a\x64\x2\x2xy\aG\x2\x2y{\a\x44\x2\x2zr\x3\x2\x2\x2zt\x3\x2\x2\x2zv\x3"+
		"\x2\x2\x2zx\x3\x2\x2\x2{ \x3\x2\x2\x2|}\ag\x2\x2}\x85\ay\x2\x2~\x7F\a"+
		"g\x2\x2\x7F\x85\aY\x2\x2\x80\x81\aG\x2\x2\x81\x85\ay\x2\x2\x82\x83\aG"+
		"\x2\x2\x83\x85\aY\x2\x2\x84|\x3\x2\x2\x2\x84~\x3\x2\x2\x2\x84\x80\x3\x2"+
		"\x2\x2\x84\x82\x3\x2\x2\x2\x85\"\x3\x2\x2\x2\x86\x87\t\x6\x2\x2\x87$\x3"+
		"\x2\x2\x2\x88\x89\ai\x2\x2\x89\x91\au\x2\x2\x8A\x8B\ai\x2\x2\x8B\x91\a"+
		"U\x2\x2\x8C\x8D\aI\x2\x2\x8D\x91\au\x2\x2\x8E\x8F\aI\x2\x2\x8F\x91\aU"+
		"\x2\x2\x90\x88\x3\x2\x2\x2\x90\x8A\x3\x2\x2\x2\x90\x8C\x3\x2\x2\x2\x90"+
		"\x8E\x3\x2\x2\x2\x91&\x3\x2\x2\x2\x92\x93\t\a\x2\x2\x93(\x3\x2\x2\x2\x94"+
		"\x95\t\b\x2\x2\x95*\x3\x2\x2\x2\x96\x97\t\t\x2\x2\x97,\x3\x2\x2\x2\x98"+
		"\x99\an\x2\x2\x99\xA1\ay\x2\x2\x9A\x9B\aN\x2\x2\x9B\xA1\ay\x2\x2\x9C\x9D"+
		"\an\x2\x2\x9D\xA1\aY\x2\x2\x9E\x9F\aN\x2\x2\x9F\xA1\aY\x2\x2\xA0\x98\x3"+
		"\x2\x2\x2\xA0\x9A\x3\x2\x2\x2\xA0\x9C\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2"+
		"\xA1.\x3\x2\x2\x2\xA2\xA3\t\n\x2\x2\xA3\x30\x3\x2\x2\x2\xA4\xA5\t\v\x2"+
		"\x2\xA5\x32\x3\x2\x2\x2\xA6\xA7\t\f\x2\x2\xA7\x34\x3\x2\x2\x2\xA8\xA9"+
		"\at\x2\x2\xA9\xB1\a\x66\x2\x2\xAA\xAB\at\x2\x2\xAB\xB1\a\x46\x2\x2\xAC"+
		"\xAD\aT\x2\x2\xAD\xB1\a\x66\x2\x2\xAE\xAF\aT\x2\x2\xAF\xB1\a\x46\x2\x2"+
		"\xB0\xA8\x3\x2\x2\x2\xB0\xAA\x3\x2\x2\x2\xB0\xAC\x3\x2\x2\x2\xB0\xAE\x3"+
		"\x2\x2\x2\xB1\x36\x3\x2\x2\x2\xB2\xB3\t\r\x2\x2\xB3\x38\x3\x2\x2\x2\xB4"+
		"\xB5\au\x2\x2\xB5\xBD\a\x64\x2\x2\xB6\xB7\au\x2\x2\xB7\xBD\a\x44\x2\x2"+
		"\xB8\xB9\aU\x2\x2\xB9\xBD\a\x64\x2\x2\xBA\xBB\aU\x2\x2\xBB\xBD\a\x44\x2"+
		"\x2\xBC\xB4\x3\x2\x2\x2\xBC\xB6\x3\x2\x2\x2\xBC\xB8\x3\x2\x2\x2\xBC\xBA"+
		"\x3\x2\x2\x2\xBD:\x3\x2\x2\x2\xBE\xBF\t\xE\x2\x2\xBF<\x3\x2\x2\x2\xC0"+
		"\xC1\av\x2\x2\xC1\xC9\a\x64\x2\x2\xC2\xC3\av\x2\x2\xC3\xC9\a\x44\x2\x2"+
		"\xC4\xC5\aV\x2\x2\xC5\xC9\a\x64\x2\x2\xC6\xC7\aV\x2\x2\xC7\xC9\a\x44\x2"+
		"\x2\xC8\xC0\x3\x2\x2\x2\xC8\xC2\x3\x2\x2\x2\xC8\xC4\x3\x2\x2\x2\xC8\xC6"+
		"\x3\x2\x2\x2\xC9>\x3\x2\x2\x2\xCA\xCB\at\x2\x2\xCB\xD3\a\x64\x2\x2\xCC"+
		"\xCD\at\x2\x2\xCD\xD3\a\x44\x2\x2\xCE\xCF\aT\x2\x2\xCF\xD3\a\x64\x2\x2"+
		"\xD0\xD1\aT\x2\x2\xD1\xD3\a\x44\x2\x2\xD2\xCA\x3\x2\x2\x2\xD2\xCC\x3\x2"+
		"\x2\x2\xD2\xCE\x3\x2\x2\x2\xD2\xD0\x3\x2\x2\x2\xD3@\x3\x2\x2\x2\xD4\xD5"+
		"\aw\x2\x2\xD5\xDD\a\x64\x2\x2\xD6\xD7\aw\x2\x2\xD7\xDD\a\x44\x2\x2\xD8"+
		"\xD9\aW\x2\x2\xD9\xDD\a\x64\x2\x2\xDA\xDB\aW\x2\x2\xDB\xDD\a\x44\x2\x2"+
		"\xDC\xD4\x3\x2\x2\x2\xDC\xD6\x3\x2\x2\x2\xDC\xD8\x3\x2\x2\x2\xDC\xDA\x3"+
		"\x2\x2\x2\xDD\x42\x3\x2\x2\x2\xDE\xDF\az\x2\x2\xDF\xE7\ay\x2\x2\xE0\xE1"+
		"\az\x2\x2\xE1\xE7\aY\x2\x2\xE2\xE3\aZ\x2\x2\xE3\xE7\ay\x2\x2\xE4\xE5\a"+
		"Z\x2\x2\xE5\xE7\aY\x2\x2\xE6\xDE\x3\x2\x2\x2\xE6\xE0\x3\x2\x2\x2\xE6\xE2"+
		"\x3\x2\x2\x2\xE6\xE4\x3\x2\x2\x2\xE7\x44\x3\x2\x2\x2\xE8\xE9\t\xF\x2\x2"+
		"\xE9\x46\x3\x2\x2\x2\xEA\xEF\x5\x33\x1A\x2\xEB\xF0\x5+\x16\x2\xEC\xF0"+
		"\x5\x1B\xE\x2\xED\xF0\x5\x31\x19\x2\xEE\xF0\x5\x19\r\x2\xEF\xEB\x3\x2"+
		"\x2\x2\xEF\xEC\x3\x2\x2\x2\xEF\xED\x3\x2\x2\x2\xEF\xEE\x3\x2\x2\x2\xF0"+
		"H\x3\x2\x2\x2\xF1\xF7\x5/\x18\x2\xF2\xF8\x5\x19\r\x2\xF3\xF8\x5\x1D\xF"+
		"\x2\xF4\xF8\x5\x45#\x2\xF5\xF8\x5\x37\x1C\x2\xF6\xF8\x5\x1B\xE\x2\xF7"+
		"\xF2\x3\x2\x2\x2\xF7\xF3\x3\x2\x2\x2\xF7\xF4\x3\x2\x2\x2\xF7\xF5\x3\x2"+
		"\x2\x2\xF7\xF6\x3\x2\x2\x2\xF8J\x3\x2\x2\x2\xF9\xFB\x5\x17\f\x2\xFA\xF9"+
		"\x3\x2\x2\x2\xFA\xFB\x3\x2\x2\x2\xFB\xFD\x3\x2\x2\x2\xFC\xFE\x5M\'\x2"+
		"\xFD\xFC\x3\x2\x2\x2\xFE\xFF\x3\x2\x2\x2\xFF\xFD\x3\x2\x2\x2\xFF\x100"+
		"\x3\x2\x2\x2\x100L\x3\x2\x2\x2\x101\x102\t\x10\x2\x2\x102N\x3\x2\x2\x2"+
		"\x103\x104\v\x2\x2\x2\x104P\x3\x2\x2\x2\x12\x2Tz\x84\x90\xA0\xB0\xBC\xC8"+
		"\xD2\xDC\xE6\xEF\xF7\xFA\xFF\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Spect.Net.CommandParser.Generated
