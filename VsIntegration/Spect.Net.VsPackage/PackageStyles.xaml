<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:memory1="clr-namespace:Spect.Net.VsPackage.ToolWindows.Memory"
                    xmlns:toolWindows="clr-namespace:Spect.Net.VsPackage.ToolWindows"
                    xmlns:export="clr-namespace:Spect.Net.VsPackage.Z80Programs.Export">

    <!-- Colors -->
    <Color x:Key="Cz80Text">#FF51c351</Color>
    <Color x:Key="Cz80HilitedText">#FFF89406</Color>
    <Color x:Key="Cz80StatusText">#00AFFF</Color>
    <Color x:Key="CToolBackground">#FF202020</Color>
    <Color x:Key="CKeyboardBackground">#FF202020</Color>
    <Color x:Key="CPromptBackground">#404040</Color>
    <Color x:Key="CPromptInvalidBackground">#802020</Color>
    <Color x:Key="CRomFlagBackground">#FF2020A0</Color>
    <Color x:Key="CMainButtonText">#FFF0F0F0</Color>
    <Color x:Key="CShiftText">#900000</Color>
    <Color x:Key="CExtShiftText">#F04040</Color>
    <Color x:Key="CValidationText">#FFE0E0E0</Color>
    <Color x:Key="CKeyHoverBackground">#FF405050</Color>
    <Color x:Key="CShiftKeyHoverBackground">#FF808080</Color>

    <Color x:Key="CMainMenuBackground">#303030</Color>
    <Color x:Key="CItemMenuBackground">#404040</Color>
    <Color x:Key="CSuccess">#51A351</Color>
    <Color x:Key="CWarning">#F89406</Color>
    <Color x:Key="CDanger">#BD362F</Color>
    <Color x:Key="CVividBlue">#006fFF</Color>
    <Color x:Key="CDarkerBlue">#004fa0</Color>
    <Color x:Key="CWhite90">#f0f0ff</Color>
    <Color x:Key="CSilverGray">#e0e0e0</Color>
    <Color x:Key="CMediumGray">#a0a0a0</Color>
    <Color x:Key="CEvenRow">#FF202020</Color>
    <Color x:Key="COddRow">#FF282828</Color>
    <Color x:Key="CDebugColor">#51c351</Color>

    
    <!-- Brushes -->
    <SolidColorBrush x:Key="Bz80Text" Color="{StaticResource Cz80Text}"/>
    <SolidColorBrush x:Key="BToolBackground" Color="{StaticResource CToolBackground}"/>
    <SolidColorBrush x:Key="BKeyboardBackground" Color="{StaticResource CKeyboardBackground}"/>
    <SolidColorBrush x:Key="BPromptBackground" Color="{StaticResource CPromptBackground}"/>
    <SolidColorBrush x:Key="BPromptInvalidBackground" Color="{StaticResource CPromptInvalidBackground}"/>
    <SolidColorBrush x:Key="Bz80HilitedText" Color="{StaticResource Cz80HilitedText}"/>
    <SolidColorBrush x:Key="Bz80StatusText" Color="{StaticResource Cz80StatusText}"/>
    <SolidColorBrush x:Key="BRomFlagBackground" Color="{StaticResource CRomFlagBackground}"/>
    <SolidColorBrush x:Key="BValidationText" Color="{StaticResource CValidationText}"/>
    <SolidColorBrush x:Key="BMainButtonText" Color="{StaticResource CMainButtonText}"/>
    <SolidColorBrush x:Key="BShiftText" Color="{StaticResource CShiftText}"/>
    <SolidColorBrush x:Key="BExtShiftText" Color="{StaticResource CExtShiftText}"/>

    <SolidColorBrush x:Key="BExplainText" Color="{StaticResource CSilverGray}"/>
    <SolidColorBrush x:Key="BDialogLabelText" Color="{StaticResource CSilverGray}"/>
    <SolidColorBrush x:Key="BSuccess" Color="{StaticResource CSuccess}"/>
    <SolidColorBrush x:Key="BWarning" Color="{StaticResource CWarning}"/>
    <SolidColorBrush x:Key="BDanger" Color="{StaticResource CDanger}"/>
    <SolidColorBrush x:Key="BWhite90" Color="{StaticResource CWhite90}"/>

    <SolidColorBrush x:Key="BVmRunning" Color="Transparent"/>
    <SolidColorBrush x:Key="BVmStopped" Color="{StaticResource CDanger}"/>
    <SolidColorBrush x:Key="BVmPaused" Color="{StaticResource CWarning}"/>
    <SolidColorBrush x:Key="BCurrentInstruction" Color="{StaticResource CVividBlue}"/>
    <SolidColorBrush x:Key="BDialogButtonBackground" Color="{StaticResource CVividBlue}"/>
    <SolidColorBrush x:Key="BDialogButtonHover" Color="{StaticResource CDarkerBlue}"/>

    <SolidColorBrush x:Key="BDebugBackground" Color="#FF202020"/>
    <SolidColorBrush x:Key="BDebugHeaderBackground" Color="#FF383838"/>
    <SolidColorBrush x:Key="BDebugForeground" Color="{StaticResource CDebugColor}"/>
    <SolidColorBrush x:Key="BDebugEvenRow" Color="{StaticResource CEvenRow}"/>
    <SolidColorBrush x:Key="BDebugOddRow" Color="{StaticResource COddRow}"/>
    <SolidColorBrush x:Key="BDebugSelectedBackground" Color="#FF000040"/>
    <SolidColorBrush x:Key="BDebugMouseOverBackground" Color="#FF000000"/>
    <SolidColorBrush x:Key="BDebugMouseOverBorder" Color="#FF404040"/>
    <SolidColorBrush x:Key="BKeyHoverBackground" Color="{StaticResource CKeyHoverBackground}"/>
    <SolidColorBrush x:Key="BShiftKeyHoverBackground" Color="{StaticResource CShiftKeyHoverBackground}"/>

    <SolidColorBrush x:Key="BVividBlue" Color="{StaticResource CVividBlue}"/>
    <SolidColorBrush x:Key="BMediumGray" Color="{StaticResource CMediumGray}"/>


    <!-- Component and control styes -->
    <Style x:Key="ExplainText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource BExplainText}" />
    </Style>

    <Style x:Key="DialogLabelText" TargetType="TextBlock" BasedOn="{StaticResource ExplainText}">
        <Setter Property="Foreground" Value="{StaticResource BDialogLabelText}" />
        <Setter Property="Margin" Value="12,4" />
    </Style>

    <Style x:Key="DialogRadioButton" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource BDialogLabelText}" />
        <Setter Property="Margin" Value="12,4" />
    </Style>

    <Style x:Key="DialogTextBox" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource BDialogLabelText}" />
        <Setter Property="Margin" Value="12,4" />
        <Setter Property="Background" Value="{DynamicResource BDebugHeaderBackground}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="DialogCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource BDialogLabelText}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="12,4" />
    </Style>

    <Style x:Key="DialogButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="12,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource BDialogLabelText}" />
    </Style>


    <Style x:Key="Z80Text" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource Bz80Text}" />
    </Style>

    <Style x:Key="Z80HilitedText" TargetType="TextBlock" BasedOn="{StaticResource Z80Text}">
        <Setter Property="Foreground" Value="{StaticResource Bz80HilitedText}" />
    </Style>

    <Style x:Key="Z80StatusText" TargetType="TextBlock" BasedOn="{StaticResource Z80Text}">
        <Setter Property="Foreground" Value="{StaticResource Bz80StatusText}" />
    </Style>

    <Style x:Key="MemData" TargetType="TextBlock" BasedOn="{StaticResource Z80StatusText}">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="MemDump" TargetType="TextBlock" BasedOn="{StaticResource Z80Text}">
        <Setter Property="Margin" Value="8,0,16,0" />
    </Style>

    <Style x:Key="ToolWindowStatusText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource BToolBackground}" />
        <Setter Property="Padding" Value="6,4" />
    </Style>
    
    <Style x:Key="PromptTextBox" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource Bz80Text}" />
    </Style>

    <Style x:Key="ValidationMessageText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource BValidationText}" />
        <Setter Property="Padding" Value="6,2" />
    </Style>

    <!-- Control template for a dialog button -->
    <ControlTemplate x:Key="DialogButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" 
                        BorderBrush="{DynamicResource BDialogButtonBackground}" 
                        BorderThickness="2" 
                        Background="{DynamicResource BDialogButtonBackground}" 
                        SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
                <Setter Property="Background" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BDialogButtonBackground}"/>
                <Setter Property="Background" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFB0B0B0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- Styles and templates related to Memory Dump controls -->
    <Style x:Key="MemoryListFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MemoryLineItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MemoryListFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                            <Setter Property="Background" Value="{StaticResource BDebugEvenRow}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                            <Setter Property="Background" Value="{StaticResource BDebugOddRow}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="MemoryLineTemplate">
        <memory1:MemoryLineControl />
    </DataTemplate>

    <Style x:Key="StackLineItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MemoryListFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                            <Setter Property="Background" Value="{StaticResource BDebugEvenRow}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                            <Setter Property="Background" Value="{StaticResource BDebugOddRow}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style templates for a Tab control -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource BMediumGray}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="8,2,8,4"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Margin="0">
                            <Border x:Name="innerBorder" BorderBrush="Transparent" BorderThickness="0" Background="{StaticResource BVividBlue}" Margin="-1" Opacity="0"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource BDialogButtonHover}"/>
                            <Setter Property="Foreground" Value="{StaticResource BWhite90}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource BDialogButtonHover}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="#f0f0f0"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#d9d9d9"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                            <Setter Property="Foreground" Value="{StaticResource BWhite90}"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="BorderBrush" Value="#acacac"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel"
                                        Margin="1,0"
                                        Padding="0,12,0,0"
                                        BorderBrush="{StaticResource BVividBlue}" 
                                        BorderThickness="0,2,0,0" 
                                        Background="{TemplateBinding Background}" 
                                        Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" 
                                        Grid.Row="1" KeyboardNavigation.TabIndex="2" 
                                        KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Keyboard controls -->
    <Style x:Key="ExtKeyLine" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="9" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource Bz80Text}" />
    </Style>
    <Style x:Key="ExtNumLine" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="9" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource BMainButtonText}" />
    </Style>
    <Style x:Key="MainButton" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource BMainButtonText}" />
    </Style>
    <Style x:Key="SymShiftLine" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource BShiftText}" />
    </Style>
    <Style x:Key="NumShiftLine" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource BShiftText}" />
    </Style>
    <Style x:Key="KeywordLine" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource BMainButtonText}" />
    </Style>
    <Style x:Key="ExtShiftLine" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="9" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource BExtShiftText}" />
    </Style>

    <Style x:Key="Sp128ButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="9" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource BWhite90}" />
    </Style>
    <Style x:Key="Sp128MainButtonText" TargetType="TextBlock" BasedOn="{StaticResource Sp128ButtonText}">
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style x:Key="Sp128NumButtonText" TargetType="TextBlock" BasedOn="{StaticResource Sp128ButtonText}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>
    <Style x:Key="Sp128SimpleButtonText" TargetType="TextBlock" BasedOn="{StaticResource Sp128ButtonText}">
        <Setter Property="FontSize" Value="24" />
    </Style>


    <!-- Converters-->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <toolWindows:BoolToCollapsedConverter x:Key="BoolToCollapsedConverter" />
    <toolWindows:BoolToHiddenConverter x:Key="BoolToHiddenConverter" />
    <toolWindows:Hex4Converter x:Key="Hex4Converter" />
    <toolWindows:StringListToStringConverter x:Key="StringListToStringConverter" />
    <export:ExportFormatConverter x:Key="ExportFormatConverter" />
</ResourceDictionary>