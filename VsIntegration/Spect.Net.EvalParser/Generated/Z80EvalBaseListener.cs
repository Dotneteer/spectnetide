//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\dotne\source\repos\spectnetide\Assembler\AntlrZ80EvalGenerator\AntlrZ80EvalGenerator\Z80Eval.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Spect.Net.EvalParser.Generated {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IZ80EvalListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class Z80EvalBaseListener : IZ80EvalListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileUnit([NotNull] Z80EvalParser.CompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileUnit([NotNull] Z80EvalParser.CompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.formatSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormatSpec([NotNull] Z80EvalParser.FormatSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.formatSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormatSpec([NotNull] Z80EvalParser.FormatSpecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] Z80EvalParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] Z80EvalParser.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] Z80EvalParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] Z80EvalParser.OrExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.xorExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXorExpr([NotNull] Z80EvalParser.XorExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.xorExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXorExpr([NotNull] Z80EvalParser.XorExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] Z80EvalParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] Z80EvalParser.AndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.equExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquExpr([NotNull] Z80EvalParser.EquExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.equExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquExpr([NotNull] Z80EvalParser.EquExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.relExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelExpr([NotNull] Z80EvalParser.RelExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.relExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelExpr([NotNull] Z80EvalParser.RelExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.shiftExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftExpr([NotNull] Z80EvalParser.ShiftExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.shiftExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftExpr([NotNull] Z80EvalParser.ShiftExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.addExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpr([NotNull] Z80EvalParser.AddExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.addExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpr([NotNull] Z80EvalParser.AddExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.multExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultExpr([NotNull] Z80EvalParser.MultExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.multExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultExpr([NotNull] Z80EvalParser.MultExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] Z80EvalParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] Z80EvalParser.UnaryExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.literalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpr([NotNull] Z80EvalParser.LiteralExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.literalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpr([NotNull] Z80EvalParser.LiteralExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.symbolExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbolExpr([NotNull] Z80EvalParser.SymbolExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.symbolExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbolExpr([NotNull] Z80EvalParser.SymbolExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.z80Spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterZ80Spec([NotNull] Z80EvalParser.Z80SpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.z80Spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitZ80Spec([NotNull] Z80EvalParser.Z80SpecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.reg8"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReg8([NotNull] Z80EvalParser.Reg8Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.reg8"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReg8([NotNull] Z80EvalParser.Reg8Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.reg16"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReg16([NotNull] Z80EvalParser.Reg16Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.reg16"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReg16([NotNull] Z80EvalParser.Reg16Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.memIndirect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemIndirect([NotNull] Z80EvalParser.MemIndirectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.memIndirect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemIndirect([NotNull] Z80EvalParser.MemIndirectContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.wordMemIndirect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWordMemIndirect([NotNull] Z80EvalParser.WordMemIndirectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.wordMemIndirect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWordMemIndirect([NotNull] Z80EvalParser.WordMemIndirectContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Z80EvalParser.flags"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlags([NotNull] Z80EvalParser.FlagsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Z80EvalParser.flags"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlags([NotNull] Z80EvalParser.FlagsContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Spect.Net.EvalParser.Generated
