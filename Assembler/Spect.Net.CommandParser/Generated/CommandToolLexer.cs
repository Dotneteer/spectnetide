//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\dotne\source\repos\spectnetide\Assembler\AntlrCommandParserGenerator\AntlrCommandParserGenerator\CommandTool.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Spect.Net.CommandParser.Generated {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class CommandToolLexer : Lexer {
	public const int
		WS=1, LESS=2, LESSEQ=3, GREAT=4, GREATEQ=5, EQ=6, MULT=7, HASH=8, B=9, 
		C=10, D=11, G=12, GS=13, J=14, L=15, M=16, P=17, R=18, RD=19, SB=20, H=21, 
		T=22, TB=23, RB=24, UB=25, EB=26, RETRIEVE=27, HEXNUM=28, HEXSTART=29, 
		IDENTIFIER=30, IDSTART=31, IDCONT=32, OTHER=33;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "LESS", "LESSEQ", "GREAT", "GREATEQ", "EQ", "MULT", "HASH", "B", 
		"C", "D", "G", "GS", "J", "L", "M", "P", "R", "RD", "SB", "H", "T", "TB", 
		"RB", "UB", "EB", "RETRIEVE", "HEXNUM", "HEXSTART", "IDENTIFIER", "IDSTART", 
		"IDCONT", "OTHER", "DecimalDigit", "HexDigit"
	};


	public CommandToolLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'<'", "'<='", "'>'", "'>='", "'='", "'*'", "'#'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "LESS", "LESSEQ", "GREAT", "GREATEQ", "EQ", "MULT", "HASH", 
		"B", "C", "D", "G", "GS", "J", "L", "M", "P", "R", "RD", "SB", "H", "T", 
		"TB", "RB", "UB", "EB", "RETRIEVE", "HEXNUM", "HEXSTART", "IDENTIFIER", 
		"IDSTART", "IDCONT", "OTHER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CommandTool.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2#\xED\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x3\x2\x6\x2K\n\x2\r\x2\xE\x2L\x3\x3\x3\x3\x3"+
		"\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t"+
		"\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x5\xEo\n\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x14\x3\x14\x5\x14\x83\n\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3"+
		"\x15\x3\x15\x3\x15\x3\x15\x5\x15\x8D\n\x15\x3\x16\x3\x16\x3\x17\x3\x17"+
		"\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x5\x18\x9B\n"+
		"\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x5\x19\xA5"+
		"\n\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x5\x1A"+
		"\xAF\n\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5"+
		"\x1B\xB9\n\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x5\x1C\xC0\n\x1C\x3"+
		"\x1D\x3\x1D\x5\x1D\xC4\n\x1D\x3\x1D\x5\x1D\xC7\n\x1D\x3\x1D\x5\x1D\xCA"+
		"\n\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x5\x1E\xD3\n\x1E"+
		"\x5\x1E\xD5\n\x1E\x3\x1F\x3\x1F\a\x1F\xD9\n\x1F\f\x1F\xE\x1F\xDC\v\x1F"+
		"\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x5$\xEC\n$"+
		"\x2\x2\x2%\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11"+
		"\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2"+
		"\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?"+
		"\x2!\x41\x2\"\x43\x2#\x45\x2\x2G\x2\x2\x3\x2\x13\x4\x2\v\v\"\"\x4\x2\x44"+
		"\x44\x64\x64\x4\x2\x45\x45\x65\x65\x4\x2\x46\x46\x66\x66\x4\x2IIii\x4"+
		"\x2LLll\x4\x2NNnn\x4\x2OOoo\x4\x2RRrr\x4\x2TTtt\x4\x2JJjj\x4\x2VVvv\x4"+
		"\x2\x43\x43\x63\x63\x4\x2GHgh\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43"+
		"\\\x61\x61\x63|\x3\x2\x32;\x111\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x3J\x3\x2\x2\x2"+
		"\x5N\x3\x2\x2\x2\aP\x3\x2\x2\x2\tS\x3\x2\x2\x2\vU\x3\x2\x2\x2\rX\x3\x2"+
		"\x2\x2\xFZ\x3\x2\x2\x2\x11\\\x3\x2\x2\x2\x13^\x3\x2\x2\x2\x15`\x3\x2\x2"+
		"\x2\x17\x62\x3\x2\x2\x2\x19\x64\x3\x2\x2\x2\x1Bn\x3\x2\x2\x2\x1Dp\x3\x2"+
		"\x2\x2\x1Fr\x3\x2\x2\x2!t\x3\x2\x2\x2#v\x3\x2\x2\x2%x\x3\x2\x2\x2\'\x82"+
		"\x3\x2\x2\x2)\x8C\x3\x2\x2\x2+\x8E\x3\x2\x2\x2-\x90\x3\x2\x2\x2/\x9A\x3"+
		"\x2\x2\x2\x31\xA4\x3\x2\x2\x2\x33\xAE\x3\x2\x2\x2\x35\xB8\x3\x2\x2\x2"+
		"\x37\xBA\x3\x2\x2\x2\x39\xC1\x3\x2\x2\x2;\xD4\x3\x2\x2\x2=\xD6\x3\x2\x2"+
		"\x2?\xDD\x3\x2\x2\x2\x41\xDF\x3\x2\x2\x2\x43\xE1\x3\x2\x2\x2\x45\xE3\x3"+
		"\x2\x2\x2G\xEB\x3\x2\x2\x2IK\t\x2\x2\x2JI\x3\x2\x2\x2KL\x3\x2\x2\x2LJ"+
		"\x3\x2\x2\x2LM\x3\x2\x2\x2M\x4\x3\x2\x2\x2NO\a>\x2\x2O\x6\x3\x2\x2\x2"+
		"PQ\a>\x2\x2QR\a?\x2\x2R\b\x3\x2\x2\x2ST\a@\x2\x2T\n\x3\x2\x2\x2UV\a@\x2"+
		"\x2VW\a?\x2\x2W\f\x3\x2\x2\x2XY\a?\x2\x2Y\xE\x3\x2\x2\x2Z[\a,\x2\x2[\x10"+
		"\x3\x2\x2\x2\\]\a%\x2\x2]\x12\x3\x2\x2\x2^_\t\x3\x2\x2_\x14\x3\x2\x2\x2"+
		"`\x61\t\x4\x2\x2\x61\x16\x3\x2\x2\x2\x62\x63\t\x5\x2\x2\x63\x18\x3\x2"+
		"\x2\x2\x64\x65\t\x6\x2\x2\x65\x1A\x3\x2\x2\x2\x66g\ai\x2\x2go\au\x2\x2"+
		"hi\ai\x2\x2io\aU\x2\x2jk\aI\x2\x2ko\au\x2\x2lm\aI\x2\x2mo\aU\x2\x2n\x66"+
		"\x3\x2\x2\x2nh\x3\x2\x2\x2nj\x3\x2\x2\x2nl\x3\x2\x2\x2o\x1C\x3\x2\x2\x2"+
		"pq\t\a\x2\x2q\x1E\x3\x2\x2\x2rs\t\b\x2\x2s \x3\x2\x2\x2tu\t\t\x2\x2u\""+
		"\x3\x2\x2\x2vw\t\n\x2\x2w$\x3\x2\x2\x2xy\t\v\x2\x2y&\x3\x2\x2\x2z{\at"+
		"\x2\x2{\x83\a\x66\x2\x2|}\at\x2\x2}\x83\a\x46\x2\x2~\x7F\aT\x2\x2\x7F"+
		"\x83\a\x66\x2\x2\x80\x81\aT\x2\x2\x81\x83\a\x46\x2\x2\x82z\x3\x2\x2\x2"+
		"\x82|\x3\x2\x2\x2\x82~\x3\x2\x2\x2\x82\x80\x3\x2\x2\x2\x83(\x3\x2\x2\x2"+
		"\x84\x85\au\x2\x2\x85\x8D\a\x64\x2\x2\x86\x87\au\x2\x2\x87\x8D\a\x44\x2"+
		"\x2\x88\x89\aU\x2\x2\x89\x8D\a\x64\x2\x2\x8A\x8B\aU\x2\x2\x8B\x8D\a\x44"+
		"\x2\x2\x8C\x84\x3\x2\x2\x2\x8C\x86\x3\x2\x2\x2\x8C\x88\x3\x2\x2\x2\x8C"+
		"\x8A\x3\x2\x2\x2\x8D*\x3\x2\x2\x2\x8E\x8F\t\f\x2\x2\x8F,\x3\x2\x2\x2\x90"+
		"\x91\t\r\x2\x2\x91.\x3\x2\x2\x2\x92\x93\av\x2\x2\x93\x9B\a\x64\x2\x2\x94"+
		"\x95\av\x2\x2\x95\x9B\a\x44\x2\x2\x96\x97\aV\x2\x2\x97\x9B\a\x64\x2\x2"+
		"\x98\x99\aV\x2\x2\x99\x9B\a\x44\x2\x2\x9A\x92\x3\x2\x2\x2\x9A\x94\x3\x2"+
		"\x2\x2\x9A\x96\x3\x2\x2\x2\x9A\x98\x3\x2\x2\x2\x9B\x30\x3\x2\x2\x2\x9C"+
		"\x9D\at\x2\x2\x9D\xA5\a\x64\x2\x2\x9E\x9F\at\x2\x2\x9F\xA5\a\x44\x2\x2"+
		"\xA0\xA1\aT\x2\x2\xA1\xA5\a\x64\x2\x2\xA2\xA3\aT\x2\x2\xA3\xA5\a\x44\x2"+
		"\x2\xA4\x9C\x3\x2\x2\x2\xA4\x9E\x3\x2\x2\x2\xA4\xA0\x3\x2\x2\x2\xA4\xA2"+
		"\x3\x2\x2\x2\xA5\x32\x3\x2\x2\x2\xA6\xA7\aw\x2\x2\xA7\xAF\a\x64\x2\x2"+
		"\xA8\xA9\aw\x2\x2\xA9\xAF\a\x44\x2\x2\xAA\xAB\aW\x2\x2\xAB\xAF\a\x64\x2"+
		"\x2\xAC\xAD\aW\x2\x2\xAD\xAF\a\x44\x2\x2\xAE\xA6\x3\x2\x2\x2\xAE\xA8\x3"+
		"\x2\x2\x2\xAE\xAA\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAF\x34\x3\x2\x2\x2"+
		"\xB0\xB1\ag\x2\x2\xB1\xB9\a\x64\x2\x2\xB2\xB3\ag\x2\x2\xB3\xB9\a\x44\x2"+
		"\x2\xB4\xB5\aG\x2\x2\xB5\xB9\a\x64\x2\x2\xB6\xB7\aG\x2\x2\xB7\xB9\a\x44"+
		"\x2\x2\xB8\xB0\x3\x2\x2\x2\xB8\xB2\x3\x2\x2\x2\xB8\xB4\x3\x2\x2\x2\xB8"+
		"\xB6\x3\x2\x2\x2\xB9\x36\x3\x2\x2\x2\xBA\xBF\x5%\x13\x2\xBB\xC0\x5\x1F"+
		"\x10\x2\xBC\xC0\x5\x15\v\x2\xBD\xC0\x5#\x12\x2\xBE\xC0\x5\x13\n\x2\xBF"+
		"\xBB\x3\x2\x2\x2\xBF\xBC\x3\x2\x2\x2\xBF\xBD\x3\x2\x2\x2\xBF\xBE\x3\x2"+
		"\x2\x2\xC0\x38\x3\x2\x2\x2\xC1\xC3\x5;\x1E\x2\xC2\xC4\x5G$\x2\xC3\xC2"+
		"\x3\x2\x2\x2\xC3\xC4\x3\x2\x2\x2\xC4\xC6\x3\x2\x2\x2\xC5\xC7\x5G$\x2\xC6"+
		"\xC5\x3\x2\x2\x2\xC6\xC7\x3\x2\x2\x2\xC7\xC9\x3\x2\x2\x2\xC8\xCA\x5G$"+
		"\x2\xC9\xC8\x3\x2\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA:\x3\x2\x2\x2\xCB\xD5\x5"+
		"\x45#\x2\xCC\xD2\a\x32\x2\x2\xCD\xD3\t\xE\x2\x2\xCE\xD3\x5\x13\n\x2\xCF"+
		"\xD3\x5\x15\v\x2\xD0\xD3\x5\x17\f\x2\xD1\xD3\t\xF\x2\x2\xD2\xCD\x3\x2"+
		"\x2\x2\xD2\xCE\x3\x2\x2\x2\xD2\xCF\x3\x2\x2\x2\xD2\xD0\x3\x2\x2\x2\xD2"+
		"\xD1\x3\x2\x2\x2\xD3\xD5\x3\x2\x2\x2\xD4\xCB\x3\x2\x2\x2\xD4\xCC\x3\x2"+
		"\x2\x2\xD5<\x3\x2\x2\x2\xD6\xDA\x5? \x2\xD7\xD9\x5\x41!\x2\xD8\xD7\x3"+
		"\x2\x2\x2\xD9\xDC\x3\x2\x2\x2\xDA\xD8\x3\x2\x2\x2\xDA\xDB\x3\x2\x2\x2"+
		"\xDB>\x3\x2\x2\x2\xDC\xDA\x3\x2\x2\x2\xDD\xDE\t\x10\x2\x2\xDE@\x3\x2\x2"+
		"\x2\xDF\xE0\t\x11\x2\x2\xE0\x42\x3\x2\x2\x2\xE1\xE2\v\x2\x2\x2\xE2\x44"+
		"\x3\x2\x2\x2\xE3\xE4\t\x12\x2\x2\xE4\x46\x3\x2\x2\x2\xE5\xEC\x5\x45#\x2"+
		"\xE6\xEC\t\xE\x2\x2\xE7\xEC\x5\x13\n\x2\xE8\xEC\x5\x15\v\x2\xE9\xEC\x5"+
		"\x17\f\x2\xEA\xEC\t\xF\x2\x2\xEB\xE5\x3\x2\x2\x2\xEB\xE6\x3\x2\x2\x2\xEB"+
		"\xE7\x3\x2\x2\x2\xEB\xE8\x3\x2\x2\x2\xEB\xE9\x3\x2\x2\x2\xEB\xEA\x3\x2"+
		"\x2\x2\xECH\x3\x2\x2\x2\x13\x2Ln\x82\x8C\x9A\xA4\xAE\xB8\xBF\xC3\xC6\xC9"+
		"\xD2\xD4\xDA\xEB\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Spect.Net.CommandParser.Generated
