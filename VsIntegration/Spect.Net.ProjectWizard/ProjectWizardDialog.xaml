<Window x:Class="Spect.Net.ProjectWizard.ProjectWizardDialog" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:Spect.Net.ProjectWizard" 
        Background="{DynamicResource BToolBackground}"
        mc:Ignorable="d" 
        d:DesignHeight="500" d:DesignWidth="540" WindowStartupLocation="CenterScreen" 
        Title="Create a new ZX Spectrum project" SizeToContent="WidthAndHeight" ResizeMode="NoResize" 
        d:DataContext="{d:DesignInstance {x:Type local:SpectrumProjectWizardViewModel}}" 
        FocusManager.FocusedElement="{Binding ElementName=ProjectTypesListBox}">

    <Window.Resources>
        <Color x:Key="CToolBackground">#FF202020</Color>
        <Color x:Key="CVividBlue">#006fFF</Color>
        <Color x:Key="CDarkerBlue">#004fa0</Color>
        <Color x:Key="CSilverGray">#e0e0e0</Color>
        <Color x:Key="CSelectionBlue">#00a0FF</Color>
        <Color x:Key="CHoverBlue">#00c0ff</Color>

        <SolidColorBrush x:Key="BToolBackground" Color="{StaticResource CToolBackground}"/>
        <SolidColorBrush x:Key="BDialogButtonBackground" Color="{StaticResource CVividBlue}"/>
        <SolidColorBrush x:Key="BDialogButtonHover" Color="{StaticResource CDarkerBlue}"/>
        <SolidColorBrush x:Key="BDialogLabelText" Color="{StaticResource CSilverGray}"/>
        <SolidColorBrush x:Key="BDebugHeaderBackground" Color="#FF383838"/>
        <SolidColorBrush x:Key="BSelectionBackground" Color="{StaticResource CSelectionBlue}"/>
        <SolidColorBrush x:Key="BItemHover" Color="{StaticResource CHoverBlue}"/>

        <Style x:Key="DialogButton" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="12,2" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="{StaticResource BDialogLabelText}" />
        </Style>

        <ControlTemplate x:Key="DialogButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" 
                        BorderBrush="{DynamicResource BDialogButtonBackground}" 
                        BorderThickness="2" 
                        Background="{DynamicResource BDialogButtonBackground}" 
                        SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BDialogButtonBackground}"/>
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource BDialogButtonHover}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFB0B0B0"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ItemsPanelTemplate x:Key="ProjectItemsPanelTemplate">
            <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), 
            RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
                       ItemWidth="{Binding (ListView.View).ItemWidth, 
            RelativeSource={RelativeSource AncestorType=ListView}}"
                       MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
                       ItemHeight="{Binding (ListView.View).ItemHeight, 
            RelativeSource={RelativeSource AncestorType=ListView}}" />
        </ItemsPanelTemplate>
        <DataTemplate x:Key="ProjectItemsTemplate">
            <Grid d:DataContext="{d:DesignInstance {x:Type local:SpectrumRepositoryItemViewModel}}" 
                  Width="140"
                  Margin="0,8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Image Grid.Row="0" Source="Images/Spectrum48.ico" Stretch="UniformToFill" 
                       Width="32" Height="32"
                       Margin="0,0,0,6"/>
                <TextBlock Grid.Row="1" Text="{Binding ModelName}" HorizontalAlignment="Center"/>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding ScreenMode}" HorizontalAlignment="Center"/>
                    <TextBlock Text=" - " HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding CpuMode}" HorizontalAlignment="Center"/>
                </StackPanel>
                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="Rev. " HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding RevisionNo}" HorizontalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ProjectItemsContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource BItemHover}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource BSelectionBackground}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource BSelectionBackground}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="360" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListBox Margin="8" Width="480"
                 x:Name="ProjectTypesListBox"
                 Focusable="True"
                 BorderThickness="0"
                 HorizontalAlignment="Left"
                 SelectionMode="Extended"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.CanContentScroll="True"
                 ItemsSource="{Binding ProjectModels}" 
                 SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                 FontSize="12"
                 ItemsPanel="{DynamicResource ProjectItemsPanelTemplate}" ItemTemplate="{DynamicResource ProjectItemsTemplate}" ItemContainerStyle="{DynamicResource ProjectItemsContainerStyle}">

        </ListBox>
        <Border Grid.Row="1" Grid.Column="0"
                Padding="12,8" 
                Background="{DynamicResource BDebugHeaderBackground}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Cancel" Style="{DynamicResource DialogButton}" 
                        Click="OnCancelClick" 
                        Template="{DynamicResource DialogButtonTemplate}" />
                <Button Content="Create" Style="{DynamicResource DialogButton}" Margin="8,0,0,0" 
                        Click="OnCreateClick"
                        Template="{DynamicResource DialogButtonTemplate}"
                        IsEnabled="{Binding IsValid}"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
